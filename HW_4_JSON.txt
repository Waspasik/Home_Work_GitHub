JSON

 4. Создать внешний репозиторий c названием JSON.   ---   На главной странице https://github.com/ в разделе "Recent repositories"
нажимаем "New". Присваиваем имя репозиторию, делаем его публичным и ставим галочку напротив "Add a README file". Создаем репозиторий.
 5. Клонировать репозиторий JSON на локальный компьютер.   ---   Выбираем из списка репозиториев наш новый репозиторий "JSON" и
копируем ссылку на него через кнопку "Code" в разделе "HTTPS". Открываем Git Bash в рандомной папке, прописываем команду git clone и
копируем нашу ссылку - link: https://github.com/Waspasik/JSON.git .
 6. Внутри локального JSON создать файл “new.json”.   ---   touch new.json .
 7. Добавить файл под гит.   ---   git add new.json .
 8. Закоммитить файл.   ---   git commit -m "created new.json" .
 9. Отправить файл на внешний GitHub репозиторий.   ---   git push .
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая
желаемая зарплата). Всё написать в формате JSON.   ---   vim new.json (дописываем свои персональные данные и сохраняем файл).
 11. Отправить изменения на внешний репозиторий.   ---   git add new.json , git commit -m "add new.json" , git push .
 12. Создать файл preferences.json   ---   touch preferences.json .
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года,
страна которую хотели бы посетить) в формате JSON.   ---   vim preferences.json , (повторяем шаг 10).
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON   ---   vim skills.json .
 15. Отправить сразу 2 файла на внешний репозиторий.   ---   git add -A && git commit -m "Creat preferences.json and skills.json" .
Пушим наши файлы - git push . 
 16. На веб интерфейсе создать файл bug_report.json.   ---   На веб странице нашего репозитория нажимаем кнопку "Add file" и выбираем
"Creat new file". Присваиваем имя нашему файлу (bug_report.json) и коммитим файл (Creat bug_report.json). Нажимаем кнопку "Commit new file". 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   ---   Указано в шаге 16.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.   ---   В списке файлом репозитория
нажимаем на файл bug_report.json, нажимаем на знак "Edit this file" после чего вносим изменения в файл, добавляем коммент в коммит и
коммитим файл через кнопку "Commit changes".
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   ---   Указано в шаге 18.
 20. Синхронизировать внешний и локальный репозиторий JSON.   ---   git fetch (проверяем наличие различий между локальным и внешним
репозиторием) и вводим команду git pull .